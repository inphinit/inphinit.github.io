{"items":[{"t":"F","n":"\\inphinit_check_path","p":"[Global_Namespace].html#function_inphinit_check_path","d":"<p>case-sensitive check path</p>"},{"t":"F","n":"\\inphinit_error","p":"[Global_Namespace].html#function_inphinit_error","d":"<p>Function used from <code>set_error_handler</code> and trigger <code>Event::trigger('error')</code></p>"},{"t":"F","n":"\\inphinit_sandbox","p":"[Global_Namespace].html#function_inphinit_sandbox","d":"<p>Sandbox include files</p>"},{"t":"C","n":"Inphinit\\App","p":"Inphinit/App.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Checkup","p":"Inphinit/Checkup.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Config","p":"Inphinit/Config.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Debugging\\App","p":"Inphinit/Debugging/App.html","d":null,"f":{"n":"Inphinit\\Debugging","p":"Inphinit/Debugging.html"}},{"t":"C","n":"Inphinit\\Debugging\\Debug","p":"Inphinit/Debugging/Debug.html","d":null,"f":{"n":"Inphinit\\Debugging","p":"Inphinit/Debugging.html"}},{"t":"C","n":"Inphinit\\Dom\\Document","p":"Inphinit/Dom/Document.html","d":null,"f":{"n":"Inphinit\\Dom","p":"Inphinit/Dom.html"}},{"t":"C","n":"Inphinit\\Dom\\DomException","p":"Inphinit/Dom/DomException.html","d":null,"f":{"n":"Inphinit\\Dom","p":"Inphinit/Dom.html"}},{"t":"C","n":"Inphinit\\Dom\\Selector","p":"Inphinit/Dom/Selector.html","d":null,"f":{"n":"Inphinit\\Dom","p":"Inphinit/Dom.html"}},{"t":"C","n":"Inphinit\\Event","p":"Inphinit/Event.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Exception","p":"Inphinit/Exception.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Experimental\\Http\\Forwarded","p":"Inphinit/Experimental/Http/Forwarded.html","d":null,"f":{"n":"Inphinit\\Experimental\\Http","p":"Inphinit/Experimental/Http.html"}},{"t":"C","n":"Inphinit\\Experimental\\Http\\Method","p":"Inphinit/Experimental/Http/Method.html","d":null,"f":{"n":"Inphinit\\Experimental\\Http","p":"Inphinit/Experimental/Http.html"}},{"t":"C","n":"Inphinit\\Experimental\\Utility\\ObjectPath","p":"Inphinit/Experimental/Utility/ObjectPath.html","d":null,"f":{"n":"Inphinit\\Experimental\\Utility","p":"Inphinit/Experimental/Utility.html"}},{"t":"C","n":"Inphinit\\Filesystem\\File","p":"Inphinit/Filesystem/File.html","d":null,"f":{"n":"Inphinit\\Filesystem","p":"Inphinit/Filesystem.html"}},{"t":"C","n":"Inphinit\\Filesystem\\Size","p":"Inphinit/Filesystem/Size.html","d":null,"f":{"n":"Inphinit\\Filesystem","p":"Inphinit/Filesystem.html"}},{"t":"C","n":"Inphinit\\Http\\Negotiation","p":"Inphinit/Http/Negotiation.html","d":null,"f":{"n":"Inphinit\\Http","p":"Inphinit/Http.html"}},{"t":"C","n":"Inphinit\\Http\\Request","p":"Inphinit/Http/Request.html","d":null,"f":{"n":"Inphinit\\Http","p":"Inphinit/Http.html"}},{"t":"C","n":"Inphinit\\Http\\Response","p":"Inphinit/Http/Response.html","d":null,"f":{"n":"Inphinit\\Http","p":"Inphinit/Http.html"}},{"t":"C","n":"Inphinit\\Http\\Status","p":"Inphinit/Http/Status.html","d":"<p>Constant with the most common HTTP codes</p>","f":{"n":"Inphinit\\Http","p":"Inphinit/Http.html"}},{"t":"C","n":"Inphinit\\Maintenance","p":"Inphinit/Maintenance.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Packages","p":"Inphinit/Packages.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Routing\\Resource","p":"Inphinit/Routing/Resource.html","d":null,"f":{"n":"Inphinit\\Routing","p":"Inphinit/Routing.html"}},{"t":"C","n":"Inphinit\\Routing\\Treaty","p":"Inphinit/Routing/Treaty.html","d":null,"f":{"n":"Inphinit\\Routing","p":"Inphinit/Routing.html"}},{"t":"C","n":"Inphinit\\Session","p":"Inphinit/Session.html","d":null,"f":{"n":"Inphinit","p":"Inphinit.html"}},{"t":"C","n":"Inphinit\\Utility\\Arrays","p":"Inphinit/Utility/Arrays.html","d":null,"f":{"n":"Inphinit\\Utility","p":"Inphinit/Utility.html"}},{"t":"C","n":"Inphinit\\Utility\\Others","p":"Inphinit/Utility/Others.html","d":null,"f":{"n":"Inphinit\\Utility","p":"Inphinit/Utility.html"}},{"t":"C","n":"Inphinit\\Utility\\Strings","p":"Inphinit/Utility/Strings.html","d":null,"f":{"n":"Inphinit\\Utility","p":"Inphinit/Utility.html"}},{"t":"C","n":"Inphinit\\Utility\\Url","p":"Inphinit/Utility/Url.html","d":null,"f":{"n":"Inphinit\\Utility","p":"Inphinit/Utility.html"}},{"t":"C","n":"Inphinit\\Utility\\Version","p":"Inphinit/Utility/Version.html","d":null,"f":{"n":"Inphinit\\Utility","p":"Inphinit/Utility.html"}},{"t":"C","n":"Inphinit\\Viewing\\View","p":"Inphinit/Viewing/View.html","d":null,"f":{"n":"Inphinit\\Viewing","p":"Inphinit/Viewing.html"}},{"t":"M","n":"Inphinit\\App::__construct","p":"Inphinit/App.html#method___construct","d":null},{"t":"M","n":"Inphinit\\App::config","p":"Inphinit/App.html#method_config","d":"<p>Get or set application configs</p>"},{"t":"M","n":"Inphinit\\App::action","p":"Inphinit/App.html#method_action","d":"<p>Register callable or controller for a route</p>"},{"t":"M","n":"Inphinit\\App::setNamespace","p":"Inphinit/App.html#method_setNamespace","d":"<p>Prefixes the namespace in the current scope control</p>"},{"t":"M","n":"Inphinit\\App::setPath","p":"Inphinit/App.html#method_setPath","d":"<p>Prefixes route path in the current scope control</p>"},{"t":"M","n":"Inphinit\\App::setPattern","p":"Inphinit/App.html#method_setPattern","d":"<p>Create or replace a pattern for URL slugs</p>"},{"t":"M","n":"Inphinit\\App::scope","p":"Inphinit/App.html#method_scope","d":"<p>Register a callback for isolate routes</p>"},{"t":"M","n":"Inphinit\\App::exec","p":"Inphinit/App.html#method_exec","d":"<p>Execute application</p>"},{"t":"M","n":"Inphinit\\App::routes","p":"Inphinit/App.html#method_routes","d":"<p>Get routes from current scope and parents</p>"},{"t":"M","n":"Inphinit\\App::forward","p":"Inphinit/App.html#method_forward","d":null},{"t":"M","n":"Inphinit\\App::__get","p":"Inphinit/App.html#method___get","d":null},{"t":"M","n":"Inphinit\\App::__set","p":"Inphinit/App.html#method___set","d":null},{"t":"M","n":"Inphinit\\Checkup::__construct","p":"Inphinit/Checkup.html#method___construct","d":null},{"t":"M","n":"Inphinit\\Checkup::getErrors","p":"Inphinit/Checkup.html#method_getErrors","d":"<p>Get errors</p>"},{"t":"M","n":"Inphinit\\Checkup::getWarnings","p":"Inphinit/Checkup.html#method_getWarnings","d":"<p>Get warnings</p>"},{"t":"M","n":"Inphinit\\Config::__construct","p":"Inphinit/Config.html#method___construct","d":"<p>Return items from a config file in a object (iterator or with -&gt;)</p>"},{"t":"M","n":"Inphinit\\Config::reload","p":"Inphinit/Config.html#method_reload","d":"<p>Reload configuration from file</p>"},{"t":"M","n":"Inphinit\\Config::commit","p":"Inphinit/Config.html#method_commit","d":"<p>Save configuration to file</p>"},{"t":"M","n":"Inphinit\\Config::__get","p":"Inphinit/Config.html#method___get","d":"<p>Magic method for get specific item</p>"},{"t":"M","n":"Inphinit\\Config::__set","p":"Inphinit/Config.html#method___set","d":"<p>Magic method for set value (this method don't save data)</p>"},{"t":"M","n":"Inphinit\\Config::__isset","p":"Inphinit/Config.html#method___isset","d":"<p>Magic method for check if value exists in top-level</p>"},{"t":"M","n":"Inphinit\\Config::__unset","p":"Inphinit/Config.html#method___unset","d":"<p>Magic method for unset variable with <code>unset()</code> function</p>"},{"t":"M","n":"Inphinit\\Config::__destruct","p":"Inphinit/Config.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Debugging\\App::action","p":"Inphinit/Debugging/App.html#method_action","d":"<p>Validate method and callback, if valid register callable or controller for a route</p>"},{"t":"M","n":"Inphinit\\Debugging\\App::setNamespace","p":"Inphinit/Debugging/App.html#method_setNamespace","d":"<p>Validate namespace prefix, if valid define controller prefix on scope</p>"},{"t":"M","n":"Inphinit\\Debugging\\App::setPath","p":"Inphinit/Debugging/App.html#method_setPath","d":"<p>Validate path prefix, if valid define route prefix paths on scope</p>"},{"t":"M","n":"Inphinit\\Debugging\\App::setPattern","p":"Inphinit/Debugging/App.html#method_setPattern","d":"<p>Validate pattern, if valid create or replace a pattern for URL slugs</p>"},{"t":"M","n":"Inphinit\\Debugging\\App::scope","p":"Inphinit/Debugging/App.html#method_scope","d":"<p>Validate URL pattern, if valid register a callback for isolate routes</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::unregister","p":"Inphinit/Debugging/Debug.html#method_unregister","d":"<p>Unregister debug events</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::renderError","p":"Inphinit/Debugging/Debug.html#method_renderError","d":"<p>Render a View to error</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::renderPerformance","p":"Inphinit/Debugging/Debug.html#method_renderPerformance","d":"<p>Render a View to show performance, memory and time to display page</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::renderDefined","p":"Inphinit/Debugging/Debug.html#method_renderDefined","d":"<p>Render a View to show performance and show declared classes</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::view","p":"Inphinit/Debugging/Debug.html#method_view","d":"<p>Register a debug views</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::performance","p":"Inphinit/Debugging/Debug.html#method_performance","d":"<p>Get memory usage and you can also use it to calculate runtime.</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::classes","p":"Inphinit/Debugging/Debug.html#method_classes","d":"<p>Get declared classes</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::functions","p":"Inphinit/Debugging/Debug.html#method_functions","d":"<p>Get declared functions</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::constants","p":"Inphinit/Debugging/Debug.html#method_constants","d":"<p>Get defined constants</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::source","p":"Inphinit/Debugging/Debug.html#method_source","d":"<p>Get snippet from a file</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::caller","p":"Inphinit/Debugging/Debug.html#method_caller","d":"<p>Get backtrace php scripts</p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::assistant","p":"Inphinit/Debugging/Debug.html#method_assistant","d":"<p>Convert error message in a link, see <code>system/configs/debug.php</code></p>"},{"t":"M","n":"Inphinit\\Debugging\\Debug::editor","p":"Inphinit/Debugging/Debug.html#method_editor","d":"<p>Convert error message in a link, see <code>system/configs/debug.php</code></p>"},{"t":"M","n":"Inphinit\\Dom\\Document::__construct","p":"Inphinit/Dom/Document.html#method___construct","d":"<p>Create a Document instance</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::setSeverityLevels","p":"Inphinit/Dom/Document.html#method_setSeverityLevels","d":"<p>Define libXML errors as exceptions</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::setLoadOptions","p":"Inphinit/Dom/Document.html#method_setLoadOptions","d":"<p>Define libXML options for load a document or string</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::setSaveOptions","p":"Inphinit/Dom/Document.html#method_setSaveOptions","d":"<p>Define libXML options for dump or save a document as file</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::document","p":"Inphinit/Dom/Document.html#method_document","d":"<p>Get original document</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::root","p":"Inphinit/Dom/Document.html#method_root","d":"<p>Get root element</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::selector","p":"Inphinit/Dom/Document.html#method_selector","d":"<p>Gets all elements that match the CSS selector</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::getNamespaces","p":"Inphinit/Dom/Document.html#method_getNamespaces","d":"<p>Get namespace attributes from root element or specific element</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::load","p":"Inphinit/Dom/Document.html#method_load","d":"<p>Load string or file</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::dump","p":"Inphinit/Dom/Document.html#method_dump","d":"<p>Convert document to XML string, HTML string or array</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::save","p":"Inphinit/Dom/Document.html#method_save","d":"<p>Save document to file</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::fromArray","p":"Inphinit/Dom/Document.html#method_fromArray","d":"<p>Convert Array to DOM</p>"},{"t":"M","n":"Inphinit\\Dom\\Document::toArray","p":"Inphinit/Dom/Document.html#method_toArray","d":"<p>Convert DOM to Array</p>"},{"t":"M","n":"Inphinit\\Dom\\DomException::__construct","p":"Inphinit/Dom/DomException.html#method___construct","d":"<p>Raise an exception</p>"},{"t":"M","n":"Inphinit\\Dom\\Selector::__construct","p":"Inphinit/Dom/Selector.html#method___construct","d":"<p>Create a <code>Inphinit\\Dom\\Selector</code> instance.</p>"},{"t":"M","n":"Inphinit\\Dom\\Selector::xpath","p":"Inphinit/Dom/Selector.html#method_xpath","d":"<p>Get DOMXPath instance</p>"},{"t":"M","n":"Inphinit\\Dom\\Selector::count","p":"Inphinit/Dom/Selector.html#method_count","d":"<p>Count all nodes matching the given CSS selector</p>"},{"t":"M","n":"Inphinit\\Dom\\Selector::all","p":"Inphinit/Dom/Selector.html#method_all","d":"<p>Returns a \\DOMNodeList that match the specified selector</p>"},{"t":"M","n":"Inphinit\\Dom\\Selector::first","p":"Inphinit/Dom/Selector.html#method_first","d":"<p>Returns the first element or node within the document that matches the specified selector.</p>"},{"t":"M","n":"Inphinit\\Event::trigger","p":"Inphinit/Event.html#method_trigger","d":"<p>Trigger registered event</p>"},{"t":"M","n":"Inphinit\\Event::on","p":"Inphinit/Event.html#method_on","d":"<p>Register an event</p>"},{"t":"M","n":"Inphinit\\Event::off","p":"Inphinit/Event.html#method_off","d":"<p>Unregister 1 or all events</p>"},{"t":"M","n":"Inphinit\\Exception::__construct","p":"Inphinit/Exception.html#method___construct","d":"<p>Raise an exception</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Forwarded::__construct","p":"Inphinit/Experimental/Http/Forwarded.html#method___construct","d":null},{"t":"M","n":"Inphinit\\Experimental\\Http\\Forwarded::setHost","p":"Inphinit/Experimental/Http/Forwarded.html#method_setHost","d":null},{"t":"M","n":"Inphinit\\Experimental\\Http\\Forwarded::setProto","p":"Inphinit/Experimental/Http/Forwarded.html#method_setProto","d":null},{"t":"M","n":"Inphinit\\Experimental\\Http\\Forwarded::toHeader","p":"Inphinit/Experimental/Http/Forwarded.html#method_toHeader","d":null},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::__construct","p":"Inphinit/Experimental/Http/Method.html#method___construct","d":"<p>Create instace</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::setAllowed","p":"Inphinit/Experimental/Http/Method.html#method_setAllowed","d":"<p>Set allowed</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::appendHeader","p":"Inphinit/Experimental/Http/Method.html#method_appendHeader","d":"<p>Append header</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::appendParam","p":"Inphinit/Experimental/Http/Method.html#method_appendParam","d":"<p>Append param</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::__toString","p":"Inphinit/Experimental/Http/Method.html#method___toString","d":"<p>Get header from <code>$_REQUEST</code> or from headers</p>"},{"t":"M","n":"Inphinit\\Experimental\\Http\\Method::override","p":"Inphinit/Experimental/Http/Method.html#method_override","d":"<p>Override <code>$_SERVER['REQUEST_METHOD']</code></p>"},{"t":"M","n":"Inphinit\\Experimental\\Utility\\ObjectPath::__construct","p":"Inphinit/Experimental/Utility/ObjectPath.html#method___construct","d":"<p>Define object or array</p>"},{"t":"M","n":"Inphinit\\Experimental\\Utility\\ObjectPath::__get","p":"Inphinit/Experimental/Utility/ObjectPath.html#method___get","d":"<p>Get item</p>"},{"t":"M","n":"Inphinit\\Experimental\\Utility\\ObjectPath::__set","p":"Inphinit/Experimental/Utility/ObjectPath.html#method___set","d":"<p>Set item</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::exists","p":"Inphinit/Filesystem/File.html#method_exists","d":"<p>Check if file exists using case-sensitive,\nFor help developers who using Windows OS and using unix-like for production</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::permissions","p":"Inphinit/Filesystem/File.html#method_permissions","d":"<p>Get file/folder permissions in a format more readable.</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::mime","p":"Inphinit/Filesystem/File.html#method_mime","d":"<p>Get mimetype from file, return <code>false</code> if file is invalid</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::encoding","p":"Inphinit/Filesystem/File.html#method_encoding","d":"<p>Determines whether the file is binary</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::output","p":"Inphinit/Filesystem/File.html#method_output","d":"<p>Show file in output, if use ob_start is auto used ob_flush. You can set delay in microseconds for cycles</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::portion","p":"Inphinit/Filesystem/File.html#method_portion","d":"<p>Read excerpt from a file</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::lines","p":"Inphinit/Filesystem/File.html#method_lines","d":"<p>Read lines from a file</p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::clearstat","p":"Inphinit/Filesystem/File.html#method_clearstat","d":"<p>Clear state files and clear size files in <code>Inphinit\\File::size</code></p>"},{"t":"M","n":"Inphinit\\Filesystem\\File::strictMode","p":"Inphinit/Filesystem/File.html#method_strictMode","d":"<p>Enable or disable strictmode for check if file exists with case-sensitive (only avaliable in development mode)</p>"},{"t":"M","n":"Inphinit\\Filesystem\\Size::__construct","p":"Inphinit/Filesystem/Size.html#method___construct","d":"<p>Define supported modes</p>"},{"t":"M","n":"Inphinit\\Filesystem\\Size::get","p":"Inphinit/Filesystem/Size.html#method_get","d":"<p>Get file size using defined modes</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::__construct","p":"Inphinit/Http/Negotiation.html#method___construct","d":"<p>Create a Negotiation instance</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::__destruct","p":"Inphinit/Http/Negotiation.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Http\\Negotiation::fromString","p":"Inphinit/Http/Negotiation.html#method_fromString","d":"<p>Create a Negotiation instance based in string</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::acceptLanguage","p":"Inphinit/Http/Negotiation.html#method_acceptLanguage","d":"<p>Get all languages by <code>Accept-Language</code> header sorted by q-factor (defined by <code>$sort</code>)</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::acceptCharset","p":"Inphinit/Http/Negotiation.html#method_acceptCharset","d":"<p>Get all languages by <code>Accept-Charset</code> header and sort by q-factor (defined by <code>$sort</code>)</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::acceptEncoding","p":"Inphinit/Http/Negotiation.html#method_acceptEncoding","d":"<p>Get all languages by <code>Accept-Encoding</code> header and sort by q-factor (defined by <code>$sort</code>)</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::accept","p":"Inphinit/Http/Negotiation.html#method_accept","d":"<p>Get all document types by <code>Accept</code> header and sorted by q-factor (defined by <code>$sort</code>)</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::getLanguage","p":"Inphinit/Http/Negotiation.html#method_getLanguage","d":"<p>Get the first language with with the greatest q-factor,\nif it does not exist then return the value of <code>$alternative</code></p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::getCharset","p":"Inphinit/Http/Negotiation.html#method_getCharset","d":"<p>Get the first charset with with the greatest q-factor,\nif it does not exist then return the value of <code>$alternative</code></p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::getEncoding","p":"Inphinit/Http/Negotiation.html#method_getEncoding","d":"<p>Get the first encoding with with the greatest q-factor,\nif it does not exist then return the value of <code>$alternative</code></p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::getAccept","p":"Inphinit/Http/Negotiation.html#method_getAccept","d":"<p>Get the first &quot;document type&quot; with the greatest q-factor,\nif it does not exist then return the value of <code>$alternative</code></p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::header","p":"Inphinit/Http/Negotiation.html#method_header","d":"<p>Parse any header with q-factor value</p>"},{"t":"M","n":"Inphinit\\Http\\Negotiation::qFactor","p":"Inphinit/Http/Negotiation.html#method_qFactor","d":"<p>Parse and sort a custom value with q-factor</p>"},{"t":"M","n":"Inphinit\\Http\\Request::path","p":"Inphinit/Http/Request.html#method_path","d":"<p>Get current HTTP path</p>"},{"t":"M","n":"Inphinit\\Http\\Request::is","p":"Inphinit/Http/Request.html#method_is","d":"<p>Check is request is: HTTPS, XMLHttpRequest, Pjax, prefetch, save-data or HTTP methods</p>"},{"t":"M","n":"Inphinit\\Http\\Request::header","p":"Inphinit/Http/Request.html#method_header","d":"<p>Get HTTP header from current request</p>"},{"t":"M","n":"Inphinit\\Http\\Request::query","p":"Inphinit/Http/Request.html#method_query","d":"<p>Get querystring, this method is useful for anyone who uses IIS.</p>"},{"t":"M","n":"Inphinit\\Http\\Request::get","p":"Inphinit/Http/Request.html#method_get","d":"<p>Get a value from <code>$_GET</code>, if <code>$_GET</code> is a array multidimensional, you can use dot like path:\nIf <code>$_GET['foo']</code> returns this <code>array( 'baz' =&gt; 'bar' =&gt; 1);</code> use <code>Request::get('foo.bar.baz');</code>\nfor return <code>1</code></p>"},{"t":"M","n":"Inphinit\\Http\\Request::post","p":"Inphinit/Http/Request.html#method_post","d":"<p>Get a value from $_POST, if $_POST is a array multidimensional, you can use dot like path:\nIf $_POST['foo'] returns this array( 'baz' =&gt; 'bar' =&gt; 1); use Request::post('foo.bar.baz');</p>"},{"t":"M","n":"Inphinit\\Http\\Request::cookie","p":"Inphinit/Http/Request.html#method_cookie","d":"<p>Get a value from <code>$_COOKIE</code> (support path using dots)</p>"},{"t":"M","n":"Inphinit\\Http\\Response::status","p":"Inphinit/Http/Response.html#method_status","d":"<p>Get or set status code and return last status code. Note: if the status has changed the Event::on('changestatus') event will be trigged</p>"},{"t":"M","n":"Inphinit\\Http\\Response::header","p":"Inphinit/Http/Response.html#method_header","d":"<p>Shortcut for set header</p>"},{"t":"M","n":"Inphinit\\Http\\Response::content","p":"Inphinit/Http/Response.html#method_content","d":"<p>Set Content-Type header or remove previously headers</p>"},{"t":"M","n":"Inphinit\\Http\\Response::cache","p":"Inphinit/Http/Response.html#method_cache","d":"<p>Set HTTP cache</p>"},{"t":"M","n":"Inphinit\\Http\\Response::download","p":"Inphinit/Http/Response.html#method_download","d":"<p>Force download current response</p>"},{"t":"M","n":"Inphinit\\Http\\Status::message","p":"Inphinit/Http/Status.html#method_message","d":"<p>Get message by HTTP code</p>"},{"t":"M","n":"Inphinit\\Http\\Status::valid","p":"Inphinit/Http/Status.html#method_valid","d":"<p>Validate HTTP code</p>"},{"t":"M","n":"Inphinit\\Maintenance::bypass","p":"Inphinit/Maintenance.html#method_bypass","d":"<p>Condition to bypass maintenance mode</p>"},{"t":"M","n":"Inphinit\\Maintenance::down","p":"Inphinit/Maintenance.html#method_down","d":"<p>Down site to maintenance mode</p>"},{"t":"M","n":"Inphinit\\Maintenance::up","p":"Inphinit/Maintenance.html#method_up","d":"<p>Up site</p>"},{"t":"M","n":"Inphinit\\Maintenance::enable","p":"Inphinit/Maintenance.html#method_enable","d":"<p>Enable/disable maintenance mode</p>"},{"t":"M","n":"Inphinit\\Packages::__construct","p":"Inphinit/Packages.html#method___construct","d":"<p>Create a <code>Inphinit\\Packages</code> instance.</p>"},{"t":"M","n":"Inphinit\\Packages::logs","p":"Inphinit/Packages.html#method_logs","d":"<p>Get log</p>"},{"t":"M","n":"Inphinit\\Packages::auto","p":"Inphinit/Packages.html#method_auto","d":"<p>Auto import composer packages</p>"},{"t":"M","n":"Inphinit\\Packages::inAutoload","p":"Inphinit/Packages.html#method_inAutoload","d":"<p>Load <code>./system/boot/namespaces.php</code> classes</p>"},{"t":"M","n":"Inphinit\\Packages::classmap","p":"Inphinit/Packages.html#method_classmap","d":"<p>Load <code>autoload_classmap.php</code> classes</p>"},{"t":"M","n":"Inphinit\\Packages::psr0","p":"Inphinit/Packages.html#method_psr0","d":"<p>Load <code>autoload_namespaces.php</code> classes, used by PSR-0 packages</p>"},{"t":"M","n":"Inphinit\\Packages::psr4","p":"Inphinit/Packages.html#method_psr4","d":"<p>Load <code>autoload_psr4.php</code> classes, used by PSR-4 packages</p>"},{"t":"M","n":"Inphinit\\Packages::setItem","p":"Inphinit/Packages.html#method_setItem","d":"<p>Custom namespace prefix</p>"},{"t":"M","n":"Inphinit\\Packages::save","p":"Inphinit/Packages.html#method_save","d":"<p>Save imported packages path to file in PHP format</p>"},{"t":"M","n":"Inphinit\\Packages::getLibs","p":"Inphinit/Packages.html#method_getLibs","d":"<p>Return array of libs</p>"},{"t":"M","n":"Inphinit\\Packages::version","p":"Inphinit/Packages.html#method_version","d":"<p>Get package version from composer.lock file</p>"},{"t":"M","n":"Inphinit\\Packages::__destruct","p":"Inphinit/Packages.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Routing\\Resource::route","p":"Inphinit/Routing/Resource.html#method_route","d":"<p>Define routes based on class methods</p>"},{"t":"M","n":"Inphinit\\Routing\\Resource::action","p":"Inphinit/Routing/Resource.html#method_action","d":"<p>Define routes based on class methods</p>"},{"t":"M","n":"Inphinit\\Routing\\Treaty::route","p":"Inphinit/Routing/Treaty.html#method_route","d":"<p>Define routes based on class methods</p>"},{"t":"M","n":"Inphinit\\Routing\\Treaty::action","p":"Inphinit/Routing/Treaty.html#method_action","d":"<p>Define routes based on class methods</p>"},{"t":"M","n":"Inphinit\\Routing\\Treaty::parsePath","p":"Inphinit/Routing/Treaty.html#method_parsePath","d":"<p>Overwrite path parser</p>"},{"t":"M","n":"Inphinit\\Session::__construct","p":"Inphinit/Session.html#method___construct","d":"<p>Create cookie session and configure session</p>"},{"t":"M","n":"Inphinit\\Session::directory","p":"Inphinit/Session.html#method_directory","d":"<p>Set or get temp directory</p>"},{"t":"M","n":"Inphinit\\Session::clean","p":"Inphinit/Session.html#method_clean","d":"<p>Remove old files</p>"},{"t":"M","n":"Inphinit\\Session::commit","p":"Inphinit/Session.html#method_commit","d":"<p>Save session data</p>"},{"t":"M","n":"Inphinit\\Session::regenerate","p":"Inphinit/Session.html#method_regenerate","d":"<p>Regenerate data</p>"},{"t":"M","n":"Inphinit\\Session::__get","p":"Inphinit/Session.html#method___get","d":"<p>Magic method for get session variables (this method also returns variables that have not yet\nbeen committed)</p>"},{"t":"M","n":"Inphinit\\Session::__set","p":"Inphinit/Session.html#method___set","d":"<p>Magic method for set session variables (this method don't commit data)</p>"},{"t":"M","n":"Inphinit\\Session::__isset","p":"Inphinit/Session.html#method___isset","d":"<p>Magic method for check if variable is setted (this method also returns variables that have not yet\nbeen committed)</p>"},{"t":"M","n":"Inphinit\\Session::__unset","p":"Inphinit/Session.html#method___unset","d":"<p>Magic method for unset variable with <code>unset()</code> function</p>"},{"t":"M","n":"Inphinit\\Session::__destruct","p":"Inphinit/Session.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Utility\\Arrays::iterable","p":"Inphinit/Utility/Arrays.html#method_iterable","d":"<p>Similar to <code>is_iterable</code> from PHP-7.1.0+</p>"},{"t":"M","n":"Inphinit\\Utility\\Arrays::indexed","p":"Inphinit/Utility/Arrays.html#method_indexed","d":"<p>Check if array is indexed, like ['foo', 'bar']. Similar to <code>array_is_list</code></p>"},{"t":"M","n":"Inphinit\\Utility\\Arrays::associative","p":"Inphinit/Utility/Arrays.html#method_associative","d":"<p>Check if array is associative, like ['bar' =&gt; foo', 'baz' =&gt; 'bar']</p>"},{"t":"M","n":"Inphinit\\Utility\\Arrays::ksort","p":"Inphinit/Utility/Arrays.html#method_ksort","d":"<p>Ksort recursive</p>"},{"t":"M","n":"Inphinit\\Utility\\Others::extract","p":"Inphinit/Utility/Others.html#method_extract","d":"<p>Read array or object by path using dot</p>"},{"t":"M","n":"Inphinit\\Utility\\Strings::toAscii","p":"Inphinit/Utility/Strings.html#method_toAscii","d":"<p>Convert string to ASCII</p>"},{"t":"M","n":"Inphinit\\Utility\\Strings::capitalize","p":"Inphinit/Utility/Strings.html#method_capitalize","d":"<p>Capitalize words using hyphen or a custom delimiter.</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::setDefaultPorts","p":"Inphinit/Utility/Url.html#method_setDefaultPorts","d":"<p>Sets default ports</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::setSlugDict","p":"Inphinit/Utility/Url.html#method_setSlugDict","d":"<p>Sets slug dictionary</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::__construct","p":"Inphinit/Utility/Url.html#method___construct","d":"<p>Parse URL</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::application","p":"Inphinit/Utility/Url.html#method_application","d":"<p>Get Url instance from current url</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::normalize","p":"Inphinit/Utility/Url.html#method_normalize","d":"<p>Normalize path and querystring</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::canonpath","p":"Inphinit/Utility/Url.html#method_canonpath","d":"<p>Canon path</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::__get","p":"Inphinit/Utility/Url.html#method___get","d":"<p>Get value for a URL component</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::__set","p":"Inphinit/Utility/Url.html#method___set","d":"<p>Set value for a URL component</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::__toString","p":"Inphinit/Utility/Url.html#method___toString","d":"<p>Compose string</p>"},{"t":"M","n":"Inphinit\\Utility\\Url::__destruct","p":"Inphinit/Utility/Url.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Utility\\Version::__construct","p":"Inphinit/Utility/Version.html#method___construct","d":"<p>Parse version format</p>"},{"t":"M","n":"Inphinit\\Utility\\Version::__get","p":"Inphinit/Utility/Version.html#method___get","d":"<p>Get value for a version component</p>"},{"t":"M","n":"Inphinit\\Utility\\Version::__set","p":"Inphinit/Utility/Version.html#method___set","d":"<p>Set value for a version component</p>"},{"t":"M","n":"Inphinit\\Utility\\Version::__toString","p":"Inphinit/Utility/Version.html#method___toString","d":"<p>Compose string</p>"},{"t":"M","n":"Inphinit\\Utility\\Version::__destruct","p":"Inphinit/Utility/Version.html#method___destruct","d":null},{"t":"M","n":"Inphinit\\Viewing\\View::forceRender","p":"Inphinit/Viewing/View.html#method_forceRender","d":"<p>Force the <code>View::render</code> method to render at the time it is called</p>"},{"t":"M","n":"Inphinit\\Viewing\\View::dispatch","p":"Inphinit/Viewing/View.html#method_dispatch","d":"<p>Starts rendering of registered views. After calling this method call it will automatically\nexecute <code>View::forceRender()</code></p>"},{"t":"M","n":"Inphinit\\Viewing\\View::data","p":"Inphinit/Viewing/View.html#method_data","d":"<p>Share or remove shared data to Views, shared variables will be added as variables to the views that will be executed later</p>"},{"t":"M","n":"Inphinit\\Viewing\\View::exists","p":"Inphinit/Viewing/View.html#method_exists","d":"<p>Check if view exists in ./application/View/ folder</p>"},{"t":"M","n":"Inphinit\\Viewing\\View::render","p":"Inphinit/Viewing/View.html#method_render","d":"<p>Register or render a View. If View is registered this method returns the index number from View</p>"},{"t":"M","n":"Inphinit\\Viewing\\View::remove","p":"Inphinit/Viewing/View.html#method_remove","d":"<p>Remove a registered View by index</p>"},{"t":"N","n":"","p":"[Global_Namespace].html"},{"t":"N","n":"Inphinit","p":"Inphinit.html"},{"t":"N","n":"Inphinit\\Debugging","p":"Inphinit/Debugging.html"},{"t":"N","n":"Inphinit\\Dom","p":"Inphinit/Dom.html"},{"t":"N","n":"Inphinit\\Experimental","p":"Inphinit/Experimental.html"},{"t":"N","n":"Inphinit\\Experimental\\Http","p":"Inphinit/Experimental/Http.html"},{"t":"N","n":"Inphinit\\Experimental\\Utility","p":"Inphinit/Experimental/Utility.html"},{"t":"N","n":"Inphinit\\Filesystem","p":"Inphinit/Filesystem.html"},{"t":"N","n":"Inphinit\\Http","p":"Inphinit/Http.html"},{"t":"N","n":"Inphinit\\Routing","p":"Inphinit/Routing.html"},{"t":"N","n":"Inphinit\\Utility","p":"Inphinit/Utility.html"},{"t":"N","n":"Inphinit\\Viewing","p":"Inphinit/Viewing.html"}]}
